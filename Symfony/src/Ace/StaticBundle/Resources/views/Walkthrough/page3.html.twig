{% extends 'AceStaticBundle:Walkthrough:skeleton.html.twig' %}


{% block javascripts %}
    <script type="text/javascript" src="{{ path("AceGenericBundle_embedded_compilerflasher_js") }}"></script>
    <script type="text/javascript">

        var plugin_check_id = window.setInterval(function () {
            if ($(".alert").length > 0) {
                window.clearInterval(plugin_check_id);
                window.location.replace("{{ path("AceStaticBundle_walkthrough", {"page":1}) }}");
            }
        }, 500);

        $(document).ready(function () {
            $("#uploadusb").removeClass("btn");
            $("#uploadusb").addClass("huge-button");
            $("#ports_div").hide();
            $("#ports_div").removeClass("input-append");
            $("#upload_icon").remove();
        });

        function start()
        {
            $("#verify_div").hide(1000);
            $("#start_button").hide(1000);
            if (window.selectedBoard["name"].indexOf("Digispark") === -1)
            {
                $("#step_output_text").hide(200).html("<p>Please connect your device to your computer. If you have already connected your device, please disconnect it, wait a few seconds, and then connect it again.</p>").show(1000);
                window.files = {"Arduino Generic Blink.ino":"void setup() { pinMode(13, OUTPUT); pinMode(9, OUTPUT); } void loop() { digitalWrite(13, HIGH); digitalWrite(9, HIGH); delay(1000); digitalWrite(13, LOW); digitalWrite(9, LOW); delay(1000); }"}
                if(typeof portsAvail === "undefined")
                    portsAvail = [""];
                var oldPortsAvail = portsAvail;
                window.setInterval(function(){
                    if(oldPortsAvail.length < portsAvail.length)
                    {
                        var tempPortsAvail = portsAvail.slice(0);
                        for (i = 0; i < oldPortsAvail.length; i++)
                            for (j = 0; j < tempPortsAvail.length; j++)
                                if (oldPortsAvail [i] == tempPortsAvail[j]) {
                                    tempPortsAvail.splice(j, 1);
                                    j--;
                                }
                        $("#ports").val(tempPortsAvail[0]);
                        window.tutorial_selected_port = tempPortsAvail[0];
                        $("#step_output_text").hide(200).html("<p>You are ready! Please hit the USB Flash button to flash your device for the first time.</p>").show(1000);
                        $("#ports_div").show(1000);
                    }
                    else if(oldPortsAvail.length > portsAvail.length)
                    {
                            if((typeof portslist.options[portslist.selectedIndex] === "undefined") || (window.tutorial_selected_port != portslist.options[portslist.selectedIndex].text))
                            {
                                $("#step_output_text").hide(200).html("<p>You just disconnected your device. Please connect your device to your computer. If you have already connected your device, please disconnect it, wait a few seconds, and then connect it again.</p>").show(1000);
                                $("#ports_div").hide();
                            }
                    }
                    oldPortsAvail = portsAvail;
                }, 200);
            }
            else
            {
                $("#step_output_text").html("<p>Click 'USB Flash' and get ready to connect your Digispark when you are asked to</p>").show(1000);
                $("#ports_div").show(1000);
                window.files = {"Digispark Blink.ino":"void setup() { pinMode(0, OUTPUT); pinMode(1, OUTPUT); } void loop() { digitalWrite(0, HIGH); digitalWrite(1, HIGH); delay(1000); digitalWrite(0, LOW); digitalWrite(1, LOW); delay(1000); }"}
            }

            window.setInterval(function () {
                if ($("#operation_output").text() == "Digispark Flashed" || $("#operation_output").text() == "Upload successful")
                {
                    $("#operation_output").text($("#operation_output").text()+". You should now see a blinking LED on your device. Congratulations, you are done!");

                }
            }, 100);
        }
    </script>
{% endblock %}

{% block stylesheets %}
    <style>
        #plugin_div
        {
            width: 100%
        }

        #ports_div
        {
            width:100%
        }

        #ports {
            visibility: hidden;
            width: 0px;
            height: 0px;
            position: fixed;
        }

        #boards {
            display: block;
            margin: auto;
            width: 70%;
            font-size: 1.2em;
        }

        .alert {
            font-size: 30px;
            line-height: 50px;
            text-align: center;
        }

        #operation_output
        {
            font-size: 30px;
            line-height: 50px;
        }

            /* line 14, multi-line-button.sass */
        .huge-button {
            -moz-background-clip: padding;
            -webkit-background-clip: padding;
            -o-background-clip: padding-box;
            -ms-background-clip: padding-box;
            -khtml-background-clip: padding-box;
            background-clip: padding-box;
            border-width: 1px;
            -moz-border-radius: 6px;
            -webkit-border-radius: 6px;
            -o-border-radius: 6px;
            -ms-border-radius: 6px;
            -khtml-border-radius: 6px;
            border-radius: 6px;
            border-style: solid;
            color: white;
            display: block;
            margin: 0.2em auto;
            padding: 12px 15px;
            text-align: center;
            text-decoration: none;
            background-color: #60a3d8;
            background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, color-stop(0%, #89bbe2), color-stop(50%, #60a3d8), color-stop(100%, #378bce));
            background-image: -moz-linear-gradient(top, #89bbe2 0%, #60a3d8 50%, #378bce 100%);
            background-image: linear-gradient(top, #89bbe2 0%, #60a3d8 50%, #378bce 100%);
            border-color: #2970a9;
            border-left-color: #60a3d8;
            border-top-color: #60a3d8;
            -moz-box-shadow: rgba(255, 255, 255, 0.5) 1px 1px 0 0 inset;
            -webkit-box-shadow: rgba(255, 255, 255, 0.5) 1px 1px 0 0 inset;
            -o-box-shadow: rgba(255, 255, 255, 0.5) 1px 1px 0 0 inset;
            box-shadow: rgba(255, 255, 255, 0.5) 1px 1px 0 0 inset;
            color: white;
            text-shadow: #2e7ebd 0 1px 2px;

        {#our own code#}
            padding: 30px;
            font-size: 30px;
            width: 70%;
        }

        {#no idea why that was here but whaeva#}
            /* line 27, _multi-line-button.sass */
        /*.huge-button:active {*/
            /*padding: 13px 15px 11px;*/
        /*}*/

            /* line 48, _multi-line-button.sass */
        .huge-button:hover, .huge-button:focus {
            background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, color-stop(0%, #9dc7e7), color-stop(50%, #74afdd), color-stop(100%, #378bce));
            background-image: -moz-linear-gradient(top, #9dc7e7 0%, #74afdd 50%, #378bce 100%);
            background-image: linear-gradient(top, #9dc7e7 0%, #74afdd 50%, #378bce 100%);
        }

            /* line 50, _multi-line-button.sass */
        .huge-button:active, .huge-button.depressed {
            background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, color-stop(0%, #5796c8), color-stop(100%, #6aa2ce));
            background-image: -moz-linear-gradient(top, #5796c8 0%, #6aa2ce 100%);
            background-image: linear-gradient(top, #5796c8 0%, #6aa2ce 100%);
            -moz-box-shadow: none;
            -webkit-box-shadow: none;
            -o-box-shadow: none;
            box-shadow: none;
            border-color: #2970a9;
        }
    </style>
{% endblock %}

{% block page_content %}
    <h3>Testing the device</h3>
    <p>You should now have all the necessary requirements to actually talk to your device. We will now make sure your
        computer can talk to your device.</p>
    <div id="step_output_text"><p>Please select your board from the list below and then click on 'Start'</p></div>
    <div id="cb_cf" data-sections="usbflash"></div>
    <button id="start_button" onclick="start();" class="huge-button">Start</button>
{% endblock %}